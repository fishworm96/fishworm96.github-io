{"meta":{"title":"梦开始的地方","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"返回字符位置","slug":"返回字符位置","date":"2020-11-19T13:18:56.000Z","updated":"2020-11-19T13:20:02.415Z","comments":true,"path":"2020/11/19/返回字符位置/","link":"","permalink":"http://example.com/2020/11/19/%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE/","excerpt":"","text":"1234567891011121314151617181920212223242526// 判断一个字符串 &#x27;abcoefoxyozzopp&#x27; 中出现次数最多的字符，并统计其次数// 核心算法：利用 charAt() 遍历这个字符串// 把每个字符都储存给对象，如果对象没有该属性，就为1，如果存在了就 +1// 遍历对象，得到最大值和该字符var str = &#x27;abcoefoxyozzopp&#x27;;var o = &#123;&#125;;for (var i = 0; i &lt; str.length; i++) &#123; var chars = str.charAt(i) //chars是字符串的每一个字符 if(o[chars]) &#123; // o[chars] 得到的是属性值 o[chars]++; &#125; else &#123; o[chars] = 1; &#125;&#125;console.log(o);var ch = &#x27;&#x27;;//2.遍历对象var max = 0;for (var k in 0) &#123; //k 得到的是属性名 // o[k] 得到的是属性值 if(o[k] &gt; max) &#123; max = 0[k] ch = k; &#125;&#125;","categories":[],"tags":[{"name":"JS小题目：返回字符位置","slug":"JS小题目：返回字符位置","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE/"}]},{"title":"冒泡","slug":"冒泡","date":"2020-11-19T11:03:06.000Z","updated":"2020-11-19T11:05:15.083Z","comments":true,"path":"2020/11/19/冒泡/","link":"","permalink":"http://example.com/2020/11/19/%E5%86%92%E6%B3%A1/","excerpt":"","text":"12345678var arr = [5, 4, 3, 2, 1]for (var i = 0; i &lt;= arr.length -1; i++) &#123;//外层循环管趟数 for (var j = 0; j &lt;= arr.length -i -1; j++)//里面的循环管每趟的交换次数 if(arr[j]) &gt; arr[j + 1] &#123; var temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; &#125;&#125;","categories":[],"tags":[{"name":"JS小题目：冒泡","slug":"JS小题目：冒泡","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E5%86%92%E6%B3%A1/"}]},{"title":"时间戳","slug":"时间戳","date":"2020-11-16T11:15:32.000Z","updated":"2020-11-18T14:38:24.577Z","comments":true,"path":"2020/11/16/时间戳/","link":"","permalink":"http://example.com/2020/11/16/%E6%97%B6%E9%97%B4%E6%88%B3/","excerpt":"","text":"123456789101112131415function countDown(tiem) &#123; var nowTime = +new Date(); //返回的是当前时间总的毫秒 var inputTime = +new Date(tiem); //返回的是用户输入时间总的毫秒 var times = (inputTime - nowTime) / 1000; // times是剩余时间的总秒数 var d = parseInt(times / 60 / 60 / 24); //天 d = d &lt; 10 ? &#x27;0&#x27; +d : d; var h = parseInt(times / 60 / 60 % 24); //时 h = h &lt; 10 ? &#x27;0&#x27; +h : h; var m = parseInt(times / 60 % 60); //分 m = m &lt; 10 ? &#x27;0&#x27; +m : m; var s = parseInt(times % 60); //当前的秒 s = s &lt; 10 ? &#x27;0&#x27; +s : s; return d + &#x27;天&#x27; + &#x27;时&#x27; + h + &#x27;分&#x27; + m + &#x27;秒&#x27; + s;&#125;console.log(countDown(&#x27;2020-11-19 18:00:00&#x27;))","categories":[],"tags":[{"name":"JS小题目：时间戳","slug":"JS小题目：时间戳","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E6%97%B6%E9%97%B4%E6%88%B3/"}]}],"categories":[],"tags":[{"name":"JS小题目：返回字符位置","slug":"JS小题目：返回字符位置","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE/"},{"name":"JS小题目：冒泡","slug":"JS小题目：冒泡","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E5%86%92%E6%B3%A1/"},{"name":"JS小题目：时间戳","slug":"JS小题目：时间戳","permalink":"http://example.com/tags/JS%E5%B0%8F%E9%A2%98%E7%9B%AE%EF%BC%9A%E6%97%B6%E9%97%B4%E6%88%B3/"}]}